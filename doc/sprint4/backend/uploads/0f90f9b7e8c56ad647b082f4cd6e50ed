# First Year Veterans

## Iteration 03

* **Start date**: 2024-07-06
* **End date**: 2024-07-20

## Process

### Quick Introduction to the Process

In this iteration, we aim to refine our workflows, improve communication, and enhance our productivity by implementing new strategies along with adding new features.

### Changes from Previous Iteration

We had no major changes as the previous methods worked. Though we improved the commit messages and branch naming convention.

### Roles & Responsibilities

- **Communications**: Oversees the project timeline, coordinates meetings with the founder, and maintains notes for sprints/standups.
  - Ethan
- **Frontend Developer**: Focuses on developing the user interface using React.
  - Andy (Friend Matching)
  - Ethan (Posts and Projects Page)
- **Backend Developer**: Handles server-side logic and database management using Neo4j.
  - Ali (Friend Matching)
  - Eddy (Posts and Project Page)
- **Full Stack Developer**: Bridges the gap between frontend and backend, ensuring smooth integration.
  - Richie (Chat, Group Systems and additional support)

### Events

Planned meetings and events:

* **Standup Meetings**: Bi-daily meetings to discuss the current state of work/progress.
* **General Code Explanations**: Weekly meetings to align frontend and backend teams and reach a consensus on code functionality.
* **Coding/Learning Sessions**: Bi-daily meetings to discuss learning resources and share knowledge.
* **Clarifying Meetings**: Unscheduled meetings to clarify concepts between frontend and backend developers.

### Artifacts

Artifacts to organize the team:

* **Task Board**: A Jira board to visualize tasks, their status, and assign them to team members.
* **Meeting Notes**: Weekly shared documents for notes from all meetings to recall decisions and keep absentees updated.

### Git / GitHub Workflow

Our Git / GitHub workflow is designed to facilitate seamless collaboration and avoid conflicts:

* **Branching Strategy**: Each feature is developed in its own branch. Once a feature is complete, it is merged into the main branch. 
* **Pull Requests**: Developers submit pull requests for their features. These are reviewed by peers before merging.
* **Conflict Management**: To avoid conflicts, each feature is designed to be as independent as possible. Common components like the home page or top bar are modular and contain individual page components, simplifying conflict resolution.

## Product

### Goals and Tasks

We aim to complete the following by the end of the sprint:

* **Chat Page**:
  - Ability to add and remove events in the personal calendar.
* **Match Making Feature**:
  - Ability to add and remove friends/followers.
* **Project Page**:
  - Ability to create new projects that users can request to join and when joined can add/upload files, upload projects with tags.

Goals for this iteration are prioritized from most to least important. Tasks are broken down into user stories for clarity and better management.

### Artifacts

Artifacts to present the project idea:

* **User Stories**: Detailed user stories to ensure the product meets user needs.
* **Documentation**: Adding documentation to the code to ensure clarity in new code.
* **Purpose**: Clearly defined user stories help align development with user needs and ensure that each feature delivers value.
* **Calendar Pages**: Build a calendar page to allow users to keep track of events
* **Friends List**: Updated the profile/freinds list page
* **Posts Page** Build a posts page to allow users to create new posts, view new/all posts, comment and like posts.